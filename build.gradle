plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "io.github.juuxel.loom-vineflower" version "1.11.0"
}

version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.nucleoid.xyz" }
	maven { url "https://maven.terraformersmc.com" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"
	modImplementation include("eu.pb4:placeholder-api:${project.placeholder_api}")
	modImplementation include("eu.pb4:polymer-virtual-entity:${project.polymer_version}")

	modLocalRuntime "com.terraformersmc:modmenu:8.0.0"
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath

		dependencies {
			testmodImplementation sourceSets.main.output
		}
	}
}

loom {
	runs {
		testmodClient {
			client()
			name = "Test Client"
			runDir = "test"
			source = sourceSets.testmod
		}
		testmodServer {
			server()
			name = "Test Server"
			runDir = "test"
			source = sourceSets.testmod
		}
	}

	accessWidenerPath = file("src/main/resources/entity-health-display.accesswidener")
}

vineflower {
	toolVersion = "1.9.3"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
